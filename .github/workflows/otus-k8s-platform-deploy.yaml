name: Otus Kubernetes Platform deploy

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      # TF_VAR_cloud_id: ${{ secrets.cloud_id }}
      TF_VAR_folder_id: ${{ secrets.folder_id }}
      TF_VAR_service_account_id: ${{ secrets.service_account_id }}
      TF_VAR_four_level_domain: ${{ vars.four_level_domain }}
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3  
        
      - name: Decode Service Account Key and save as key.json
        working-directory: terraform
        run: |
          mkdir keys
          echo "${{ secrets.SERVICE_ACCOUNT_KEY }}" > ./keys/key.json
          mkdir cluster/keys
          cp ./keys/key.json ./cluster/keys
          mkdir infra/keys
          cp ./keys/key.json ./infra/keys
          
      - name: Install Yandex Cloud CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH
          
      - name: Authenticate with Yandex Cloud
        run: |
          export PATH="$HOME/yandex-cloud/bin:$PATH"
          yc config set service-account-key ${GITHUB_WORKSPACE}/terraform/keys/key.json
          yc config set cloud-id ${{ secrets.cloud_id }}
          yc config set folder-id ${{ secrets.folder_id }}
          
      - name: Generate ssh key for k8s nodes
        working-directory: terraform
        run: |
          ssh-keygen -t ed25519 -f ./cluster/keys/ssh_node_group_key  -q -N ""
         
      - name: Deploy K8S cluster with Terraform
        working-directory: terraform/cluster
        run: |
          terraform init
          terraform apply -auto-approve
          
      - name: Copy kubeconfig
        working-directory: terraform/cluster
        run: |
          cp terraform/cluster/kubeconfig.yaml terraform/infra
          cp terraform/cluster/kubeconfig.yaml terraform/workload
          
      - name: Deploy infrastructure with Terraform
        working-directory: terraform/infra
        run: |
          terraform init
          terraform apply -auto-approve
          
      - name: Deploy workload applications with Terraform
        working-directory: terraform/workload
        run: |
          terraform init
          terraform apply -auto-approve